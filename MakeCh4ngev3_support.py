#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#    Apr 25, 2022 02:05:39 PM +0300  platform: Windows NT
import os
import numpy as np
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg 
import matplotlib.pyplot as plot
import csv
from tkinter import filedialog
from tkinter.filedialog import *
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *


global filename, n_lpg, n_ics, n_bio, share_lpg, share_ics, share_bio, E_demand, Io, c_es, e_ante, e_post, h_ante, h_post, HH, m_fw, LHV_fw, eta_fw, stima, ramp, m_lpg, LHV_lpg, eta_lpg, P_lpg, C_lpg, c_lpg, e_lpg, t_change, eta_ics, P_ics, C_ics, c_ics, e_ics, t_ignition, t_collect_ics, MM_bio, LHV_bio, eta_bio, GY, TS, rho_sub, COD, HRT, OLR, V_dig, C_bio, c_bio, e_bio, t_collect_bio, min_lpg, max_lpg, min_ics, max_ics, min_bio, max_bio, MAX_inv, MAX_e, MAX_h, investment_is_a_constrain, obb1, obb2, obb3, W1, W2, W3

import optimizer
import MakeCh4ngev3
import biogas

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = MakeCh4ngev3.Toplevel1(_top1)
    # Creates a toplevel widget.
    # global _top2, _w2
    # _top2 = tk.Toplevel(root)
    # _w2 = MakeCh4ngev1.Toplevel2(_top2)
    # Creates a toplevel widget.
    # global _top3, _w3
    # _top3 = tk.Toplevel(root)
    # _w3 = MakeCh4ngev1.Toplevel2_1(_top3)
    # Creates a toplevel widget.
    # global _top4, _w4
    # _top4 = tk.Toplevel(root)
    # _w4 = MakeCh4ngev1.Toplevel2_2(_top4)
    # Creates a toplevel widget.
    # global _top5, _w5
    # _top5 = tk.Toplevel(root)
    # _w5 = MakeCh4ngev1.Toplevel3(_top5)
    root.mainloop()

def bind_bio(*args):
    print('MakeCh4ngev1_support.bind_bio')
    global _top4, _w4
    _top4 = tk.Toplevel(root)
    _w4 = MakeCh4ngev3.Toplevel2_2(_top4)

def bind_res(self):
    
    print('MakeCh4ngev1_support.bind_res')
    global _top7, _w7
    _top7 = tk.Toplevel(root)
    _w7 = MakeCh4ngev3.Toplevel6(_top7)
    

def bind_biosys(*args):
    print('MakeCh4ngev1_support.bind_biosys')
    global _top8, _w8, V_dig, V_sub
    _top8 = tk.Toplevel(root)
    _w8 = MakeCh4ngev3.Toplevel7(_top8)
    
    V_dig, V_sub = biogas.run(LHV_fw, m_fw, LHV_bio, MM_bio, GY, TS, rho_sub, COD, HRT, OLR)
    
    _w8.Text1.insert(END, str(HRT))
    _w8.Text1_2.insert(END, str(OLR))
    _w8.Text1_2_1.insert(END, str(V_dig))
    _w8.Text1_2_1_1.insert(END, str(V_sub))
    
def hide_biosys(*args):
    print('MakeCh4ngev1_support.hide_biosys')
    global _top8, _w8
    _top8.withdraw()
    
def bind_cond(*args):
    print('MakeCh4ngev1_support.bind_cond')
    global _top5, _w5
    _top5 = tk.Toplevel(root)
    _w5 = MakeCh4ngev3.Toplevel3(_top5)
    
def bind_ics(*args):
    print('MakeCh4ngev1_support.bind_ics')
    global _top3, _w3
    _top3 = tk.Toplevel(root)
    _w3 = MakeCh4ngev3.Toplevel2_1(_top3)

def bind_lpg(*args):
    print('MakeCh4ngev1_support.bind_lpg')
    global _top2, _w2
    _top2 = tk.Toplevel(root)
    _w2 = MakeCh4ngev3.Toplevel2(_top2)  
    
def bind_fw(self):
    print('MakeCh4ngev1_support.bind_fw')
    global _top6, _w6, HH, m_fw, _top1
    HH = self.Entry1.get()
    m_fw = self.Entry2.get()
    _top6 = tk.Toplevel(root)
    _w6 = MakeCh4ngev3.Toplevel2_1_1(_top6)

def hide_lpg(*args):
    print('MakeCh4ngev1_support.hide_lpg')
    global _top2, _w2
    _top2.withdraw()

def hide_ics(*args):
    print('MakeCh4ngev1_support.hide_lpg')
    global _top3, _w3
    _top3.withdraw()
    
def hide_bio(*args):
    print('MakeCh4ngev1_support.hide_lpg')
    global _top4, _w4
    _top4.withdraw()

def hide_cond(*args):
    print('MakeCh4ngev1_support.hide_lpg')
    global _top5, _w5
    _top5.withdraw()
    
def hide_fw(*args):
    print('MakeCh4ngev1_support.hide_fw')
    global _top6, _w6
    _top6.withdraw()
    
def restart(*args):
    print('MakeCh4ngev1_support.hide_fw')
    global _top7, _w7, _top5, _w5
    _top7.withdraw()
    _top5.withdraw()
    _top5 = tk.Toplevel(root)
    _w5 = MakeCh4ngev3.Toplevel3(_top5)
    
    
def open_ramp(self):
    global filename
    print('MakeCh4ngev3_support.open_ramp')
    filename = filedialog.askopenfilename( filetypes = [('CSV Files','*csv')])
    if filename:
        self.Entry3.insert(0,filename)
    
def save_ramp(self):
    global filename
    with open(filename, 'r') as file:
        data_ramp = csv.reader(file)
        print(data_ramp)
            
def run(self):
    min_lpg, max_lpg, min_ics, max_ics, min_bio, max_bio, MAX_inv, MAX_e, MAX_h, investment_is_a_constrain, obb1, obb2, obb3, W1, W2, W3 = save_cond(self)
    V_dig, V_sub = biogas.run(LHV_fw, m_fw, LHV_bio, MM_bio, GY, TS, rho_sub, COD, HRT, OLR)
    filename = _w1.Entry3.get()
    
    if _w1.selectedButton == 1:
        ramp = False
        stima = True
    else:
        ramp = True
        stima = False
        
    print(filename, HH, m_fw, LHV_fw, eta_fw, stima, ramp, m_lpg, LHV_lpg, eta_lpg, P_lpg, C_lpg, c_lpg, e_lpg, t_change, eta_ics, P_ics, C_ics, c_ics, e_ics, t_ignition, t_collect_ics, MM_bio, LHV_bio, eta_bio, GY, TS, rho_sub, COD, HRT, OLR, V_dig, C_bio, c_bio, e_bio, t_collect_bio, min_lpg, max_lpg, min_ics, max_ics, min_bio, max_bio, MAX_inv, MAX_e, MAX_h, investment_is_a_constrain, obb1, obb2, obb3, W1, W2, W3)
    
    n_lpg, n_ics, n_bio, share_lpg, share_ics, share_bio, E_demand, Io, c_es, e_ante, e_post, h_ante, h_post = optimizer.run(filename, HH, m_fw, LHV_fw, eta_fw, stima, ramp, m_lpg, LHV_lpg, eta_lpg, P_lpg, C_lpg, c_lpg, e_lpg, t_change, eta_ics, P_ics, C_ics, c_ics, e_ics, t_ignition, t_collect_ics, MM_bio, LHV_bio, eta_bio, GY, TS, rho_sub, COD, HRT, OLR, V_dig, C_bio, c_bio, e_bio, t_collect_bio, min_lpg, max_lpg, min_ics, max_ics, min_bio, max_bio, MAX_inv, MAX_e, MAX_h, investment_is_a_constrain, obb1, obb2, obb3, W1, W2, W3)
    
    bind_res(self)
    
    print("MakeCh4ngev3.print_Results")
 
    print(n_lpg, n_ics, n_bio, share_lpg, share_ics, share_bio, E_demand, Io, c_es, e_ante, e_post, h_ante, h_post)
    _w7.Text1.insert(END, str(n_lpg) + " cans")
    _w7.Text1_1.insert(END, str(n_ics) + " stoves")
    _w7.Text1_1_1.insert(END, str(n_bio) + " m³" )
    _w7.Text2.insert(END, str(E_demand))
    _w7.Text2_1.insert(END, str(Io))
    _w7.Text2_1_1.insert(END, str(c_es))
    
    _w7.Text1_1_2.insert(END, str(share_lpg) + " %")
    _w7.Text1_1_2_1.insert(END, str(share_ics) + " %")
    _w7.Text1_1_2_1_1.insert(END, str(share_bio) + " %" )
    
    pie_chart = plot.figure(figsize = (5,5), dpi = 100)
    pie_chart.set_size_inches(4,4)
    
    share = np.array([share_lpg, share_ics, share_bio])
    colors = ['#C00000','#CC6600','#00B050']
    labels = ['','','']
    
    plot.pie(share, colors=colors, autopct = '%1.1f%%', labels = None)
                    
    plot.axis('equal')
    
    canvasbar1 = FigureCanvasTkAgg(pie_chart, master = _w7.Labelframe1_1)
    canvasbar1.draw()
    canvasbar1.get_tk_widget().place(relx=0.036, rely=0.058, relheight=0.884, relwidth=0.434, bordermode='ignore')
    
    bar_chart1 = plot.figure(figsize = (6,6), dpi = 100)
    hours = [h_ante, h_post]
    colors1 = ['#B97A56','#C4FF0E']
    labels = ['','']     
    labelpos = np.arange(len(labels))
    
    plot.bar(labelpos, hours, align ='center', alpha = 1.0, color = colors1)
    plot.xticks(labelpos, labels)
    plot.ylabel('hours/day [h]')
    plot.tight_layout(pad = 2.2, w_pad = 0.5, h_pad = 0.1)
    # plot.title('Comparison hours/day')
    
    for index,datapoints in enumerate(hours):
        plot.text(x = index, y = datapoints + 0.3, s = f"{datapoints}", fontdict = dict(fontsize = 10), ha='center', va = 'bottom')
    
    plot.show()
    
    canvasbar2 = FigureCanvasTkAgg(bar_chart1, master = _w7.Labelframe1_1_1)
    canvasbar2.draw()
    canvasbar2.get_tk_widget().place(relx=0.01, rely=0.036, relheight=0.917, relwidth=0.356, bordermode='ignore')
    
    bar_chart2 = plot.figure(figsize = (5,5), dpi = 100)
    e = [e_ante, e_post]
    colors1 = ['#B97A56','#C4FF0E']
    labels = ['','']   
    labelpos = np.arange(len(labels))
               
    plot.bar(labelpos, e, align ='center', alpha = 1.0, color = colors1)
    plot.xticks(labelpos, labels)
    plot.ylabel('emissions [kton/year]')
    plot.tight_layout(pad = 2.2, w_pad = 0.5, h_pad = 0.1)
    # plot.title('Comparison CO₂ emissions')
    
    for index,datapoints in enumerate(e):
        plot.text(x = index, y = datapoints + 0.3, s = f"{datapoints}", fontdict = dict(fontsize = 10), ha='center', va = 'bottom')
    
    plot.show()
    canvasbar3 = FigureCanvasTkAgg(bar_chart2, master = _w7.Labelframe1_1_1)
    canvasbar3.draw()
    canvasbar3.get_tk_widget().place(relx=0.382, rely=0.036, relheight=0.917, relwidth=0.366, bordermode='ignore')
    

def save_fw(self):
    global _top1, _top6, LHV_fw, HH, m_fw, selection, _w1

    LHV_fw = self.TEntry1_1_1.get()
    eta_fw = self.TEntry1_1_1_1.get()
    selection = self.TCombobox2.get()
        
    _w1.TCombobox1.set(selection)
    _w1.Entry1.insert(0,HH)
    _w1.Entry2.insert(0,m_fw)
    
    _top6.withdraw()

def save_lpg(self):
    global m_lpg, LHV_lpg, eta_lpg, P_lpg, C_lpg, c_lpg, e_lpg, t_change, _top2
    m_lpg = self.TEntry1.get()
    LHV_lpg = self.TEntry1_1.get()
    eta_lpg = self.TEntry1_1_1.get()
    P_lpg = self.TEntry1_1_1_1.get()
    C_lpg = self.TEntry1_2.get()
    c_lpg = self.TEntry1_2_1.get()
    e_lpg = self.TEntry1_2_2.get()
    t_change = self.TEntry1_2_2_1.get()
    _top2.withdraw()

   
def save_ics(self):
    global eta_ics, P_ics, C_ics, c_ics, e_ics, t_ignition, t_collect_ics, _top3
    eta_ics = self.TEntry1_1_1.get()
    P_ics = self.TEntry1_1_1_1.get()
    C_ics = self.TEntry1_2.get()
    c_ics = self.TEntry1_2_1.get()
    e_ics = self.TEntry1_2_2.get()
    t_ignition = self.TEntry1_1.get()
    t_collect_ics = self.TEntry1_2_2_1.get()
    _top3.withdraw()
    
def save_bio(self):
    global MM_bio, LHV_bio, eta_bio, GY, TS, rho_sub, C_bio, c_bio, e_bio, t_collect_bio, _top4
    MM_bio = self.TEntry1.get()
    LHV_bio = self.TEntry1_1.get()
    eta_bio = self.TEntry1_1_1.get()
    GY = self.TEntry1_2_1_1.get()
    TS = self.TEntry1_1_1_1.get()
    rho_sub = self.TEntry1_1_1_1_1.get()
    C_bio = self.TEntry1_2.get()
    c_bio = self.TEntry1_2_1.get()
    e_bio = self.TEntry1_2_2.get()
    t_collect_bio = self.TEntry1_2_2_1.get()
    _top4.withdraw()
    
def save_cond(self):
    global min_lpg, max_lpg, min_ics, max_ics, min_bio, max_bio, MAX_inv, MAX_e, MAX_h, investment_is_a_constrain, obb1, obb2, obb3, W1, W2, W3
    min_lpg = self.Entry1.get()
    max_lpg = self.Entry2.get()
    min_ics = self.Entry2_1.get()
    max_ics = self.Entry2_1_2.get()
    min_bio = self.Entry2_1_1.get()
    max_bio = self.Entry2_1_2_1.get()
    MAX_inv = self.Entry2_2.get()
    MAX_e = self.Entry2_2_1.get()
    MAX_h = self.Entry2_2_1_1.get()
    
    if self.selectedButton == 1:
        investment_is_a_constrain = False
    else:
        investment_is_a_constrain = True
     
    obb1 = self.TCombobox1.get()
    obb2 = self.TCombobox1_1.get()
    obb3 = self.TCombobox1_1_1.get()
    
    W1 = self.Entry3.get()
    W2 = self.Entry4.get()
    W3 = self.Entry5.get()
    
    return min_lpg, max_lpg, min_ics, max_ics, min_bio, max_bio, MAX_inv, MAX_e, MAX_h, investment_is_a_constrain, obb1, obb2, obb3, W1, W2, W3

   
    
def read_top1(self):
    global HH, m_fw, ramp, stima, firewood, i, x, selected_fw, LHV_fw, eta_fw
    if self.selectedButton == 1:
        ramp = False
        stima = True
    else:
        ramp = True
        stima = False
    firewood = np.array([[" Generic ", 
                            " Acacia ", 
                            " Beech ", 
                            " Birch ", 
                            " Cottonwood ", 
                            " Douglas Fir ", 
                            " Food waste ", 
                            " Hem-Fir ", 
                            " Hybrid poplar ", 
                            " Manure cattle ", 
                            " Maple ", 
                            " Newspaper ", 
                            " Oak ", 
                            " Orchard prunings ", 
                            " Pine ", 
                            " Ponderosa pine ", 
                            " Poplar ", 
                            " Red Alder ", 
                            " Redwood ", 
                            " Rice straw ", 
                            " Spruce ", 
                            " Straw ", 
                            " Sugarcane bagasse ", 
                            "Switch grass", 
                            "Tire", 
                            "Tobacco residue", 
                            "Wheat Straw", 
                            "Willow", 
                            "Yellow Poplar",
                            "Personalizzato"],
                            ["14.4", 
                            "18.14", 
                            " 13.68 ", 
                            " 13.68 ", 
                            " 14.4 ", 
                            " 13.68 ", 
                            " 14.76 ", 
                            " 17.94 ", 
                            " 15.09 ", 
                            " 18.06 ", 
                            " 19.59 ", 
                            " 19.02 ", 
                            " 16.95 ", 
                            " 17.25 ", 
                            " 18.39 ", 
                            " 16.16 ", 
                            " 17.72 ", 
                            " 18.69 ", 
                            " 19.39 ", 
                            " 16.14 ", 
                            " 19.54 ", 
                            " 18.61 ", 
                            " 21.77 ", 
                            "21.4", 
                            "19.77", 
                            "16.68", 
                            "13.54", 
                            "18.16", 
                            "19.39",
                             "19.39"],
                             [" 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            "0.12", 
                            "0.12", 
                            "0.12", 
                            "0.12", 
                            "0.12", 
                            "0.12",
                            "0.12"]]) 
    selected_fw = self.TCombobox1.get()
    i = self.fw.index(selected_fw)
    LHV_fw = firewood[1][i]
    eta_fw = firewood[2][i]
    HH = self.Entry1.get()
    m_fw = self.Entry2.get()
    bind_cond()
   
def fill_fw (self):
    global firewood, i , selected_fw
    self.TEntry1_1_1.delete(0,END)
    self.TEntry1_1_1_1.delete(0,END)
    firewood = np.array([[" Generic ", 
                            " Acacia ", 
                            " Beech ", 
                            " Birch ", 
                            " Cottonwood ", 
                            " Douglas Fir ", 
                            " Food waste ", 
                            " Hem-Fir ", 
                            " Hybrid poplar ", 
                            " Manure cattle ", 
                            " Maple ", 
                            " Newspaper ", 
                            " Oak ", 
                            " Orchard prunings ", 
                            " Pine ", 
                            " Ponderosa pine ", 
                            " Poplar ", 
                            " Red Alder ", 
                            " Redwood ", 
                            " Rice straw ", 
                            " Spruce ", 
                            " Straw ", 
                            " Sugarcane bagasse ", 
                            "Switch grass", 
                            "Tire", 
                            "Tobacco residue", 
                            "Wheat Straw", 
                            "Willow", 
                            "Yellow Poplar",
                            "Personalizzato"],
                            [" 14.4 ", 
                            " 18.14 ", 
                            " 13.68 ", 
                            " 13.68 ", 
                            " 14.4 ", 
                            " 13.68 ", 
                            " 14.76 ", 
                            " 17.94 ", 
                            " 15.09 ", 
                            " 18.06 ", 
                            " 19.59 ", 
                            " 19.02 ", 
                            " 16.95 ", 
                            " 17.25 ", 
                            " 18.39 ", 
                            " 16.16 ", 
                            " 17.72 ", 
                            " 18.69 ", 
                            " 19.39 ", 
                            " 16.14 ", 
                            " 19.54 ", 
                            " 18.61 ", 
                            " 21.77 ", 
                            "21.4", 
                            "19.77", 
                            "16.68", 
                            "13.54", 
                            "18.16", 
                            "19.39",
                            "19.39"],
                             [" 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            " 0.12 ", 
                            "0.12", 
                            "0.12", 
                            "0.12", 
                            "0.12", 
                            "0.12", 
                            "0.12",
                            "0.12"]])
    selected_fw = self.TCombobox2.get()
    i = self.fw.index(selected_fw)
    self.TEntry1_1_1.insert(0,firewood[1][i])
    self.TEntry1_1_1_1.insert(0,firewood[2][i])
    
def fill_lpg (self):
    global lpgcylinders, i , selected_lpg
    self.TEntry1.delete(0,END)
    self.TEntry1_1.delete(0,END)
    self.TEntry1_1_1.delete(0,END)
    self.TEntry1_1_1_1.delete(0,END)
    self.TEntry1_2.delete(0,END)
    self.TEntry1_2_1.delete(0,END)
    self.TEntry1_2_2.delete(0,END)
    self.TEntry1_2_2_1.delete(0,END)
    lpgcylinders = np.array([["Hashi Gas 13 kg",
                                "Hashi Gas 6 kg",
                                "Hass Gas 13 kg",
                                "Hass Gas 13 kg composite",
                                "Hass Gas 6 kg",
                                "Lake Gas 13 kg",
                                "Lake Gas 50 kg",
                                "Lake Gas 6 kg",
                                "OLA Mpishi 13kg",
                                "OLA Mpishi 6kg",
                                "ProGas 13 kg",
                                "ProGas 6 kg",
                                "Rubis K-Gas 13kg",
                                "Rubis K-Gas 6kg",
                                "Safe Gas 13 kg",
                                "SEA Gas 13 kg",
                                "SEA Gas 6 kg",
                                "Shell Afrigas 13 kg",
                                "Shell Afrigas 45 kg",
                                "Shell Afrigas 6 kg",
                                "TotalEnergies 13 kg",
                                "TotalEnergies 22.5 kg",
                                "TotalEnergies 3 kg",
                                "TotalEnergies 50 kg",
                                "TotalEnergies 6 kg",
                                "Personalizzato"
                            ],
                            ["13",
                            "6",
                            "13",
                            "13",
                            "6",
                            "13",
                            "50",
                            "6",
                            "13",
                            "6",
                            "13",
                            "6",
                            "13",
                            "6",
                            "13",
                            "13",
                            "6",
                            "13",
                            "45",
                            "6",
                            "13",
                            "22.5",
                            "3",
                            "50",
                            "6",
                            "6"
                            ],
                             ["45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                            "45.5",
                             "45.5"],
                              ["0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6"
                                ],[
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6",
                                    "6"],["29.16",
                                        "18.75",
                                        "26.66",
                                        "63.33",
                                        "24.58",
                                        "31.25",
                                        "125",
                                        "24.5",
                                        "41.66",
                                        "37.5",
                                        "29.16",
                                        "21.81",
                                        "62.5",
                                        "7.83",
                                        "68",
                                        "28.75",
                                        "22.91",
                                        "35",
                                        "71.66",
                                        "22",
                                        "40",
                                        "62.5",
                                        "11.83",
                                        "95.83",
                                        "22.5",
                                        "22.5"
                                            ],["1.9",
                                                "2.01",
                                                "2.11",
                                                "2.17",
                                                "2.15",
                                                "2.08",
                                                "2.08",
                                                "2.16",
                                                "2.05",
                                                "2.08",
                                                "1.92",
                                                "2.15",
                                                "2.14",
                                                "2.16",
                                                "1.92",
                                                "2.05",
                                                "2.15",
                                                "2.14",
                                                "2.07",
                                                "2.16",
                                                "2.14",
                                                "2.07",
                                                "2.5",
                                                "2.05",
                                                "2.15",
                                                "2.15"
                                                    ],["2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871",
                                                        "2.871"
                                                            ],["15",
                                                                "10",
                                                                "15",
                                                                "15",
                                                                "10",
                                                                "15",
                                                                "15",
                                                                "10",
                                                                "15",
                                                                "10",
                                                                "15",
                                                                "10",
                                                                "15",
                                                                "10",
                                                                "15",
                                                                "15",
                                                                "10",
                                                                "15",
                                                                "15",
                                                                "10",
                                                                "15",
                                                                "15",
                                                                "10",
                                                                "15",
                                                                "10",
                                                                "10"]])
    selected_lpg = self.TCombobox1.get()
    i = self.lpg.index(selected_lpg)
    self.TEntry1.insert(0,lpgcylinders[1][i])
    self.TEntry1_1.insert(0,lpgcylinders[2][i])
    self.TEntry1_1_1.insert(0,lpgcylinders[3][i])
    self.TEntry1_1_1_1.insert(0,lpgcylinders[4][i])
    self.TEntry1_2.insert(0,lpgcylinders[5][i])
    self.TEntry1_2_1.insert(0,lpgcylinders[6][i])
    self.TEntry1_2_2.insert(0,lpgcylinders[7][i])
    self.TEntry1_2_2_1.insert(0,lpgcylinders[8][i])

def fill_bio (self):
    global substrate, i , selected_bio, COD, OLR, HRT
    self.TEntry1.delete(0,END)
    self.TEntry1_1.delete(0,END)
    self.TEntry1_1_1.delete(0,END)
    self.TEntry1_2_1_1.delete(0,END)
    self.TEntry1_2.delete(0,END)
    self.TEntry1_2_1.delete(0,END)
    self.TEntry1_2_2.delete(0,END)
    self.TEntry1_2_2_1.delete(0,END)
    self.TEntry1_1_1_1.delete(0,END)
    self.TEntry1_1_1_1_1.delete(0,END)
        
    substrate = np.array([["Cow Manure",
                            "Maize",
                            "Wheat",
                            "Barley",
                            "Municipal Solid Waste",
                            "Pig Manure",
                            "Sun Flower",
                            "Opuntia",
                            "Rape",
                            "Rice Straw",
                            "MicroAlgae",
                            "Food residues",
                            "Chicken Manure",
                            "Personalizzato"
                            ],
                            ["21.53",
                            "27.27",
                            "26.42",
                            "19.56",
                            "22.28",
                            "26.92",
                            "27.27",
                            "25.75",
                            "26.47",
                            "27.27",
                            "30.5",
                            "27.27",
                            "26.92",
                            "26.92"
                            ],
                             ["38.565",
                                "28.3",
                                "31.39",
                                "35",
                                "36.384",
                                "38.565",
                                "28.3",
                                "31.03",
                                "31.3",
                                "28.3",
                                "26.92",
                                "28.3",
                                "30.5",
                                "30.5"
                                    ],
                              ["0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6",
                                "0.6"
                                ],[
                                    "0.04",
                                    "0.60535296",
                                    "0.0267",
                                    "0.01604",
                                    "0.35",
                                    "0.015864",
                                    "0.127",
                                    "0.0578",
                                    "0.143",
                                    "0.15",
                                    "0.551",
                                    "0.157",
                                    "0.02",
                                    "0.02"
                                    ],["21",
                                        "90.6",
                                        "11.34",
                                        "26.31",
                                        "45",
                                        "8.2",
                                        "90.5",
                                        "7.53",
                                        "90.4",
                                        "91.4",
                                        "3",
                                        "28",
                                        "32",
                                        "32"
                                            ],["1000",
                                                "760",
                                                "769",
                                                "600",
                                                "311.73",
                                                "1000",
                                                "885",
                                                "975",
                                                "1050",
                                                "650",
                                                "870",
                                                "290",
                                                "580",
                                                "580"
                                                ],[ "0.7689",
                                                    "0.829699506",
                                                    "0.1212",
                                                    "0.2764370652",
                                                    "0.5",
                                                    "0.37",
                                                    "0.89",
                                                    "0.06969015",
                                                    "0.225",
                                                    "0.003",
                                                    "0.00019183",
                                                    "0.00319183",
                                                    "0.000388",
                                                    "0.000388"
                                                            ],["15",
                                                                "10",
                                                                "30",
                                                                "30",
                                                                "24",
                                                                "15",
                                                                "25",
                                                                "17",
                                                                "17",
                                                                "20",
                                                                "20",
                                                                "24",
                                                                "15",
                                                                "15"
                                                                ],["1.19",
                                                                    "5.25",
                                                                    "17.1",
                                                                    "15",
                                                                    "2.9",
                                                                    "1.2",
                                                                    "0.657",
                                                                    "4",
                                                                    "4",
                                                                    "2",
                                                                    "2",
                                                                    "5",
                                                                    "3.14",
                                                                    "3.14"],["86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54",
                                                                            "86.54"
                                                                            ],["0",
                                                                                "0",
                                                                                "0",
                                                                                "0",
                                                                                "0",
                                                                                "0",
                                                                                "0",
                                                                                "0",
                                                                                "0",
                                                                                "0",
                                                                                "0",
                                                                                "0",
                                                                                "0",
                                                                                "0"],["2.0032",
                                                                                    "1.5765",
                                                                                    "1.6651",
                                                                                    "0.2764",
                                                                                    "1.7576",
                                                                                    "1.1645",
                                                                                    "1.5765",
                                                                                   "0.5559",
                                                                                    "1.6345",
                                                                                    "1.5765",
                                                                                    "1.7638",
                                                                                    "1.5765",
                                                                                    "1.6345",
                                                                                    "1.6345"
                                                                                        ],["45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45",
                                                                                        "45"]])
    selected_bio = self.TCombobox1.get()
    i = self.bio.index(selected_bio)
    self.TEntry1.insert(0,substrate[1][i])
    self.TEntry1_1.insert(0,substrate[2][i])
    self.TEntry1_1_1.insert(0,substrate[3][i])
    self.TEntry1_2_1_1.insert(0,substrate[4][i])
    self.TEntry1_2.insert(0,substrate[10][i])
    self.TEntry1_2_1.insert(0,substrate[11][i])
    
    COD = substrate[7][i]
    HRT = substrate[8][i]
    OLR = substrate[9][i]
    
    self.TEntry1_2_2.insert(0,substrate[12][i])
    self.TEntry1_2_2_1.insert(0,substrate[13][i])
    self.TEntry1_1_1_1.insert(0,substrate[5][i])
    self.TEntry1_1_1_1_1.insert(0,substrate[6][i])
    
def fill_ics (self):
    global improvedcookingstoves, i , selected_ics

    self.TEntry1_1.delete(0,END)
    self.TEntry1_1_1.delete(0,END)
    self.TEntry1_1_1_1.delete(0,END)
    self.TEntry1_2.delete(0,END)
    self.TEntry1_2_1.delete(0,END)
    self.TEntry1_2_2.delete(0,END)
    self.TEntry1_2_2_1.delete(0,END)
    
    improvedcookingstoves = np.array([[
                                    "Mud Stoves",
                                    "Metal Stoves",
                                    "Clay Stoves",
                                    "Rocket wood stoves",
                                    "Improved Charcoal Stoves",
                                    "Forced-draft stoves",
                                    "Gasifiers",
                                    "Personalizzato"
                                        ],
                                            [
                                            "0.17",
                                            "0.23",
                                            "0.24",
                                            "0.3",
                                            "0.32",
                                            "0.45",
                                            "0.42",
                                            "0.42"
                                             ],
                                                 [
                                                 "1.44",
                                                 "1.9",
                                                 "2.0",
                                                 "2.5",
                                                 "4.4",
                                                 "3.8",
                                                 "3.5",
                                                 "3.5"
                                                 ],
                                                    [
                                                    "1.66",
                                                    "6.66",
                                                    "6.66",
                                                    "37.5",
                                                    "39.16",
                                                    "60",
                                                    "23.58",
                                                    "23.58"
                                                    ],
                                                        [
                                                        "0",
                                                        "0",
                                                        "0",
                                                        "0",
                                                        "1.15",
                                                        "0",
                                                        "0.1076",
                                                        "0.1076"
                                                        ],
                                                                [
                                                                "2.016",
                                                                "2.016",
                                                                "2.016",
                                                                "2.016",
                                                                "0.89975",
                                                                "2.016",
                                                                "0.4335",
                                                                "0.4335"
                                                                ],
                                                                        [
                                                                        "20",
                                                                        "20",
                                                                        "20",
                                                                        "20",
                                                                        "20",
                                                                        "20",
                                                                        "20",
                                                                        "20"
                                                                        ],
                                                                            [
                                                                            "30",
                                                                            "30",
                                                                            "30",
                                                                            "30",
                                                                            "10",
                                                                            "30",
                                                                            "10",
                                                                            "10"
                                                                            ]])
    selected_ics = self.TCombobox1.get()
    i = self.ics.index(selected_ics)
    self.TEntry1_1.insert(0,improvedcookingstoves[6][i])
    self.TEntry1_1_1.insert(0,improvedcookingstoves[1][i])
    self.TEntry1_1_1_1.insert(0,improvedcookingstoves[2][i])
    self.TEntry1_2.insert(0,improvedcookingstoves[3][i])
    self.TEntry1_2_1.insert(0,improvedcookingstoves[4][i])
    self.TEntry1_2_2.insert(0,improvedcookingstoves[5][i])
    self.TEntry1_2_2_1.insert(0,improvedcookingstoves[7][i])   

def quit(*args):
    print('MakeCh4ngev1_support.quit')
    os._exit(1)
    

def get_parameters(*args):
    print('get_paramaters')
    

    

if __name__ == '__main__':
    MakeCh4ngev3.start_up()





